x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean"), contains("std"))
x
names(x)
class(names(x))
x
x=select(x, contains("std()"), contains("mean()"))
x
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
names(x)
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
names(x)
rm(x)
names(data)
data
?gsub
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
names(x)
acts=names(x)
acts
gsub("t*", "Time-", acts)
gsub("t", "Time-", acts)
?regex
gsub("t{1}.*", "Time-", acts)
gsub("t", "Time-", acts)
gsub("f", "FFT-", acts)
gsub("t{1}", "Time-", acts)
gsub("^t", "Time-", acts)
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
names(data)
source('~/R/getclean-031/progass/run_analysis.R')
names(x) = gsub("^t", "Time-", names(x)) %>% gsub("^f", "FFT-")
names(x)
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
names(x) = gsub("^t", "Time-", names(x)) %>% gsub("^f", "FFT-")
names(x)
source('~/R/getclean-031/progass/run_analysis.R')
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
names(x) = gsub("^t", "Time-", names(x))
names(x) = gsub("^f", "FFT-", names(x))
names(x)
names(x)=feature_labels[[2]]
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
names(x)
gsub("^t", "Time-", names(x))
names(x) = gsub("^t", "Time-", names(x))
names(x)
gsub("^f", "FFT-", names(x))
names(x)=gsub("^f", "FFT-", names(x))
names(x)
View(data)
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
View(data)
names(data)
names(x)
gsub("-std()", "^StD: *", names(x))
gsub("*-std()", "StD: ", names(x))
gsub("\*-std()\*", "StD: \*", names(x))
gsub("*-std()*", "StD: *", names(x))
gsub("*-std()*", "StD: \*", names(x))
gsub("\*-std()\*", "StD: ", names(x))
gsub("-std()", "^StD: ", names(x))
old="abcefg"
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\2', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\1', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\3', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\2', old)
gsub('^([a-z]{3})([a-z]+)$', '\\2d\\2', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\2', old)
gsub('^([a-z]{2})([a-z]+)$', '\\1d\\2', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\2', old)
gsub('^([a-z]{3})$', '\\1d\\2', old)
gsub('^([a-z]{3})([a-z]+)', '\\1d\\2', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\2', old)
gsub('^([a-z]{3})([a-z])$', '\\1d\\2', old)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\2', old)
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
gsub('^([a-z]*)([a-z]+)$', '\\1d\\2', names(x))
gsub('^([a-z]*)-std()([a-z]+)$', 'StD: \\1\\2', names(x))
gsub("^([a-z]*)-std()([a-z]+)$", "StD: \\1\\2", names(x))
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
names(x)
gsub("^([:alpha:]*)-std()([a-z]+)$", "StD: \\1\\2", names(x))
gsub("^([:alpha:]*)-std()([:graph:]+)$", "StD: \\1\\2", names(x))
gsub("^([:alpha:]*)-std()([:graph:]+)", "StD: \\1\\2", names(x))
gsub("^([:alpha:]*)-std()([:graph:]+)", "StD: ", names(x))
gsub("^([:alpha:]*)-std()([:graph:]+)$", "StD: ", names(x))
gsub("^([:alpha:]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x))
gsub("^([^-]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x))
gsub("^([[^-]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x))
gsub("^([[^-]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x))
gsub("^([[^-]*)-std()([[:graph:]+])$", "TEST TEST TEST", names(x))
gsub("^([^-]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x))
gsub("^([^-]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x), fixed=FALSE)
gsub("^([^-]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x))
gsub("^([^-]*)-std()([:graph:]+)$", "TEST TEST TEST", names(x))
test="fBodyGyro-std()-X"
grep("^([^-]*)-std()([:graph:]+)$", test)
grep("Body", test)
gsub("^([^-]*)-std()([:graph:]+)$", "TEST TEST TEST", test)
gsub("*-std()*", "TEST TEST TEST", test)
gsub("*-std()", "TEST TEST TEST", test)
gsub("-std()", "TEST TEST TEST", test)
gsub("-std()", "^\\1", test)
gsub("-std()", "^\\1", test)
gsub("-std()", "\\1", test)
gsub("-std()", "", test)
gsub("-std()", "\\2", test)
gsub('-std()', '\\1', test)
gsub('-std()', '$&', test)
gsub('-std()', '\\$&', test)
gsub('-std()', '\\$&', test, perl=TRUE)
gsub('-std()', '\\$&', test)
gsub('-std()', '\1', test)
test
gsub('-std\(\)', '\1', test)
gsub('-std\\(\\)', '\1', test)
gsub('-std\\(\\)', '', test)
gsub('^([a-z]{3})([a-z]+)$', '\\1d\\2', old)
gsub('^([-std\\(\\)', '', test)
gsub('^([:alpha:]*)-std\\(\\)([:graph:])$', '', test)
gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]])$', '', test)
gsub('^([[:alpha:]]*)-std\\(\\)', '', test)
gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', '', test)
gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\1\\2', test)
gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\1\\2', names(x))
gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\1\\2', names(x))
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
names(data)
source('~/R/getclean-031/progass/run_analysis.R')
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
find = ("")
replace = ("")
##names(x) = gsub(find, replace, names(x))
names(x) = gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\1\\2', names(x))
names(x) = gsub('^([[:alpha:]]*)-mean\\(\\)([[:graph:]]*)$', 'Mean: \\1\\2', names(x))
names(x) = gsub(": t", ": Time-", names(x))
names(x) = gsub(": f", ": FFT-", names(x))
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
find = ("")
replace = ("")
##names(x) = gsub(find, replace, names(x))
names(x) = gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\1\\2', names(x))
names(x) = gsub('^([[:alpha:]]*)-mean\\(\\)([[:graph:]]*)$', 'Mean: \\1\\2', names(x))
names(x) = gsub(": t", ": Time-", names(x))
names(x) = gsub(": f", ": FFT-", names(x))
names(x)
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## "-mean()" and "-std()" replaced with prefixes "Mean: ", and "StD: "
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
## "t" replaced with "Time-", "f" replaced with "FFT-"
find = c("^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$", "^([[:alpha:]]*)-mean\\(\\)([[:graph:]]*)$", ": t", ": f")
replace = c("StD: \\1\\2", "Mean: \\1\\2", ": Time-", ": FFT-")
names(x) = gsub(find, replace, names(x))
?lapply
source('~/R/getclean-031/progass/run_analysis.R')
names(data)
x
names(x)
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## "-mean()" and "-std()" replaced with prefixes "Mean: ", and "StD: "
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
## "t" replaced with "Time-", "f" replaced with "FFT-"
find = c("^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$", "^([[:alpha:]]*)-mean\\(\\)([[:graph:]]*)$", ": t", ": f")
replace = c("StD: \\1\\2", "Mean: \\1\\2", ": Time-", ": FFT-")
find
replace
dim(find)
str(find)
str(replace)
lapply(names(x), gsub(find,replace))
lapply(names(x), gsub(find,replace, names(x)))
?lapply
sapply(names(x), gsub(find,replace, names(x)))
lapply(find, gsub(replace, names(x)))
lapply(find, gsub(find, replace, names(x)))
source('~/R/getclean-031/progass/run_analysis.R')
x
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## "-mean()" and "-std()" replaced with prefixes "Mean: ", and "StD: "
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
## "t" replaced with "Time-", "f" replaced with "FFT-"
names(x) = gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\1\\2', names(x))
names(x) = gsub('^([[:alpha:]]*)-mean\\(\\)([[:graph:]]*)$', 'Mean: \\1\\2', names(x))
names(x) = gsub(": t", ": Time-", names(x))
names(x) = gsub(": f", ": FFT-", names(x))
rm(names)
rm("names")
names
source('~/R/getclean-031/progass/run_analysis.R')
names(x) = ()
names(x) = character()
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
## Make feature names more human-readable and meaningful
## "-mean()" and "-std()" replaced with prefixes "Mean: ", and "StD: "
## From "features_info.txt" : "prefix 't' to denote time" - time domain signals
## Also, "Fast Fourier Transform (FFT) was applied to some of these signals" prefix "f__"
## "t" replaced with "Time-", "f" replaced with "FFT-"
names(x) = gsub('^([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\1\\2', names(x))
names(x) = gsub('^([[:alpha:]]*)-mean\\(\\)([[:graph:]]*)$', 'Mean: \\1\\2', names(x))
names(x) = gsub(": t", ": Time-", names(x))
names(x) = gsub(": f", ": FFT-", names(x))
names
names(x)
str(names)
names(x)
data=run_analysis()
names(x)
names(data)
View(data)
names(data)
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
## Set feature names, make unique so dplyr can hang
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
names(x)
x = select(x, contains("mean()"), contains("std()"))
names(x)
?select
swirl()
library(swirl)
library(dplyr)
source('~/R/getclean-031/progass/run_analysis.R')
ls(9)
ls()
swirl()
swirl)
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
?select
skip()
names(data)
exit()
end()
end
exit
quit
quit()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
names(data)
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
feature_labels = cbind(feature_labels, paste0(feature_labels[[2]], feature_labels[[3]]))
feature_labels[[2]]
feature_labels
?mutate
mutate(feature_labels, paste0(V1,V2))
feature_labels[[3]]
feature_labels[[2]]
feature_labels[[3]]
feature_labels[[1]]
feature_labels=mutate(feature_labels, paste0(V1,V2))
feature_labels[[3]]
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
temp="517fBodyBodyAccJerkMag-std()"
gsub('^()([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\2\\3', temp)
?regex
gsub('^([:digit:]*)([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\2\\3', temp)
gsub('^([:digit:]+)([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\2\\3', temp)
gsub('^([[:digit:]]*)([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\2\\3', temp)
source('~/R/getclean-031/progass/run_analysis.R')
View(feature_labels[[3]])
View(data)
data=run_analysis()
install.packages("swirl")
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
## Read in feature labels; temporarily merge feature number and name to preserve
## column ordering and make unique (original data set includes duplicates)
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt")) %>% mutate(paste0(V1,"%",V2))
## Set feature names
names(x) = feature_labels[[3]]
## names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
names(x)
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
names(data)
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
## Read in feature labels; temporarily merge feature number and name to preserve
## column ordering and make unique (original data set includes duplicates)
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt")) %>% mutate(paste0(V1,V2))
## Set feature names
names(x) = feature_labels[[3]]
## names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
x
View(names(data))
View(data)
names(x)
names(x) = gsub('^([[:digit:]]*)([[:alpha:]]*)-std\\(\\)([[:graph:]]*)$', 'StD: \\2\\3', names(x))
names(x)
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
## Read in feature labels; temporarily merge feature number and name to preserve
## column ordering and make unique (original data set includes duplicates)
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt")) %>% mutate(paste0(V1,",",V2))
## Set feature names
names(x) = feature_labels[[3]]
## names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
x
source('~/R/getclean-031/progass/run_analysis.R')
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
## Read in feature labels; temporarily merge feature number and name to preserve
## column ordering and make unique (original data set includes duplicates)
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
##%>% mutate(paste0(V1,",",V2))
## Set feature names
names(x) = feature_labels[[2]]
## names(x) = make.unique(names(x), sep = " ")
## Select only mean and std dev columns; update x
x = select(x, contains("mean()"), contains("std()"))
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
##%>% mutate(paste0(V1,",",V2))
## Set feature names
names(x) = feature_labels[[2]]
x
mutate(feature_labels,paste0(V1,",",V2)
mutate(feature_labels,paste0(V1,",",V2))
source('~/R/getclean-031/progass/run_analysis.R')
names(x) = feature_labels[[3]]
feature_labels=mutate(feature_labels,paste0(V1,",",V2))
feature_labels
x = select(x, contains("mean()"), contains("std()"))
names(x)=feature_labels
x = select(x, contains("mean()"), contains("std()"))
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
View(x)
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt")) %>% mutate(paste0(V1,",",V2))
## Set feature names
names(x) = feature_labels[[3]]
## names(x) = make.unique(names(x
names(x)
select(x, contains("mean()"), contains("std()"))
feature_labels
source('~/R/getclean-031/progass/run_analysis.R')
names(x) = feature_labels[[2]]
labels = feature_labels[[2]]
names(x)
labels
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
source('~/R/getclean-031/progass/run_analysis.R')
data=run_analysis()
data
View(data)
x = tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt")) %>%
rbind(tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt")))
x
feature_labels = tbl_df(read.table("./UCI HAR Dataset/features.txt"))
names(x) = feature_labels[[2]]
names(x) = make.unique(names(x), sep = " ")
names(x)
x
